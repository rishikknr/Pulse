version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: pulse-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-pulse}
      MYSQL_USER: ${DB_USER:-pulse}
      MYSQL_PASSWORD: ${DB_PASSWORD:-pulsepassword}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pulse-network

  # Pulse Application
  app:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile
    container_name: pulse-app
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: mysql://${DB_USER:-pulse}:${DB_PASSWORD:-pulsepassword}@db:3306/${DB_NAME:-pulse}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      VITE_APP_ID: ${VITE_APP_ID}
      OAUTH_SERVER_URL: ${OAUTH_SERVER_URL}
      VITE_OAUTH_PORTAL_URL: ${VITE_OAUTH_PORTAL_URL}
      OWNER_OPEN_ID: ${OWNER_OPEN_ID}
      OWNER_NAME: ${OWNER_NAME}
      VITE_APP_TITLE: ${VITE_APP_TITLE:-Pulse}
      VITE_APP_LOGO: ${VITE_APP_LOGO}
      BUILT_IN_FORGE_API_URL: ${BUILT_IN_FORGE_API_URL}
      BUILT_IN_FORGE_API_KEY: ${BUILT_IN_FORGE_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../../:/app
      - /app/node_modules
      - /app/dist
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: pulse-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - pulse-network
    depends_on:
      - app

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: pulse-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: 'false'
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - pulse-network
    depends_on:
      - prometheus

volumes:
  db_data:
  prometheus_data:
  grafana_data:

networks:
  pulse-network:
    driver: bridge
